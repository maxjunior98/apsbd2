----------TRIGGER PARA QUANTIDADE DE PRODUTOS---------

CREATE FUNCTION quantidade_av() returns TRIGGER AS $$
DECLARE
QNT INT;
BEGIN
	SELECT QUANTIDADE INTO QNT FROM PRODUTOS
	WHERE IDPRODUTO = NEW.IDPRODUTO;
	
	IF(QNT = 0) THEN
	RAISE EXCEPTION 'PRODUTO INDISPONIVEL';
	END IF;
	
	UPDATE PRODUTOS SET QUANTIDADE = QUANTIDADE - 1
	WHERE IDPRODUTO = NEW.IDPRODUTO;
	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;


CREATE TRIGGER CHECK_QNT
BEFORE INSERT ON PEDIDOS
FOR EACH ROW EXECUTE PROCEDURE QUANTIDADE_AV();


------VERIFICACAO DE STATUS DE LOJA PARA EFETUAR COMPRA------

CREATE FUNCTION LOJA_STAT() RETURNS TRIGGER AS $$
DECLARE
S VARCHAR(2);
BEGIN
	SELECT STAT INTO S FROM LOJAS
	WHERE IDLOJA = NEW.IDLOJA;
	IF(S = 'F') THEN
		RAISE EXCEPTION 'A LOJA ENCONTRA-SE FECHADA';
	END IF;
	RETURN NEW;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER VER_STAT
BEFORE INSERT ON PEDIDOS
FOR EACH ROW EXECUTE PROCEDURE LOJA_STAT();


--------------- VERIFICAR QUANTIDADE NEGATIVA ---------------

CREATE FUNCTION QNT_VER_INSorUP () RETURNS TRIGGER AS $$
DECLARE
Q int;
BEGIN
	SELECT NEW.QUANTIDADE INTO Q;
	IF(Q<0) THEN
		RAISE EXCEPTION 'QUANTIDADE DEVE SER POSITIVA';
	END IF;
END;
$$ LANGUAGE PLPGSQL;

CREATE TRIGGER QNT_INS_UP
BEFORE INSERT OR UPDATE ON PRODUTOS
FOR EACH ROW EXECUTE PROCEDURE LOJA_STAT();



